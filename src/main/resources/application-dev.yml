# 开发环境配置
server:
  # 服务器的HTTP端口，默认为8080
  port: 8080
  servlet:
    # 应用的访问路径
    context-path: /
  undertow:
    # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
    io-threads: 8
    # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载
    worker-threads: 256
    # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
    # 每块buffer的空间大小,越小的空间被利用越充分
    buffer-size: 512
    # 是否分配的直接内存
    direct-buffers: true

# 项目相关配置
platform:
  # 富文本路径 示例（ Windows配置D:/im/uploadPath，Linux配置 /home/im/uploadPath）
  rootPath: E:/im/uploadPath
  # 系统版本
  version: 1.2.0
  # 日志地址
  logPath: ./logs
  # token超时时间（分钟）默认7天
  timeout: 10080
  # 短信开关（N关Y开）
  sms: N
  # 跨域开关（N关Y开）
  cors: N
  group:
    portrait: https://img.alicdn.com/imgextra/i3/87413133/O1CN01mHA9DJ1Z0xlORnKuW_!!87413133.png

  # oss配置
  upload:
    uploadType: oss
    serverUrl: http://xxxx.oss-cn-beijing.aliyuncs.com
    accessKey: xxxxxxxxxxxxxxx
    secretKey: xxxxxxxxxxxxxxxxx
    bucket: xxxx
    region: oss-cn-beijing.aliyuncs.com
    post: ?x-oss-process=video/snapshot,t_1,m_fast

  # 实时语音/视频
  trtc:
    # appId
    appId: xxxxxxxxxx
    # 签名过期时间，单位秒，默认604800
    expire: 604800
    # 签名秘钥
    secret: xxxxxxxxxxxxxxxxxxxx

  # 高德地图配置
  amap:
    key: xxxxxxxxxxxxxxxxxxxxx

  # 腾讯nlp配置
  tencent:
    appId: xxxxxxxxxxxxxxxx
    appKey: xxxxxxxxxxxxxxxxxxxxxx
    appSecret: xxxxxxxxxxxxxxxxxxxxxxxxxx

# Spring配置
spring:
  # 资源信息
  messages:
    # 国际化资源文件路径
    basename: i18n/messages
  mvc:
    throw-exception-if-no-handler-found: true
  resources:
    add-mappings: false
  # 文件上传
  servlet:
    multipart:
      # 单个文件大小
      max-file-size: -1
      # 设置总上传的文件大小
      max-request-size: -1

  datasource:
    # 连接池类型
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/boot-im?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&verifyServerCertificate=false&serverTimezone=GMT%2B8&allowMultiQueries=true
    username: root
    password: root
    # Druid 的其他属性配置 springboot3 整合情况下,数据库连接信息必须在 Druid 属性下!
    druid:
      # 初始化时建立物理连接的个数
      initial-size: 5
      # 连接池的最小空闲数量
      min-idle: 5
      # 连接池最大连接数量
      max-active: 20
      # 获取连接时最大等待时间，单位毫秒
      max-wait: 60000
      # 申请连接的时候检测，如果空闲时间大于 timeBetweenEvictionRunsMillis，执行 validationQuery 检测连接是否有效。
      test-while-idle: true
      # 既作为检测的间隔时间又作为 testWhileIdel 执行的依据
      time-between-eviction-runs-millis: 60000
      # 销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接(配置连接在池中的最小生存时间)
      min-evictable-idle-time-millis: 30000
      # 用来检测数据库连接是否有效的 sql 必须是一个查询语句(oracle 中为 select 1 from dual)
      validation-query: select 'x'
      # 申请连接时会执行 validationQuery 检测连接是否有效,开启会降低性能,默认为true
      test-on-borrow: false
      # 归还连接时会执行 validationQuery 检测连接是否有效,开启会降低性能,默认为true
      test-on-return: false
      # 是否缓存 reparedStatement, 也就是 PSCache,PSCache 对支持游标的数据库性能提升巨大，比如说 oracle,在 mysql下 建议关闭。
      pool-prepared-statements: false
      # 置监控统计拦截的 filters，去掉后监控界面 sql 无法统计，stat: 监控统计、Slf4j:日志记录、waLL: 防御 sqL 注入
      filters: stat,wall,slf4j
      # 要启用 PSCache，必须配置大于0，当大于0时，poolPreparedStatements 自动触发修改为 true。在 Druid 中，不会存在 Oracle 下 PSCache 占用内存过多的问题，可以把这个数值配置大一些，比如说 100
      max-pool-prepared-statement-per-connection-size: -1
      # 合并多个 DruidDataSource 的监控数据
      use-global-data-source-stat: true
      # 通过 connectProperties 属性来打开 mergeSql 功能；慢 SQL 记录
      connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      web-stat-filter:
        # 是否启用 tatFilter 默认值 true
        enabled: true
        # 添加过滤规则
        url-pattern: /*
        # 忽略过滤的格式
        exclusions: /druid/*,*.js,*.gif,*.jpg,*.png,*.css,*.ico

        stat-view-servlet:
          # 是否启用 StatViewServlet 默认值 true
          enabled: true
          # 访问路径为 /druid 时，跳转到 StatViewServlet
          url-pattern: /druid/*
          # 是否能够重置数据
          reset-enable: false
          # 需要账号密码才能访问控制台，默认为 root
          login-username: druid
          login-password: druid
          # IP白名单
          allow: 127.0.0.1
          # IP黑名单（共同存在时，deny优先于allow）
          deny:

  # redis 配置
  redis:
    # 地址
#    host: 127.0.0.1
    host: 127.0.0.1
    # 端口，默认为6379
    port: 6379
    # 数据库
    database: 0
    # 密码
    password:
    # 连接超时时间
    timeout: 10s
    lettuce:
      pool:
        # 连接池中的最小空闲连接
        min-idle: 0
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池的最大数据库连接数
        max-active: 8
        # #连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1ms


